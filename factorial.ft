# A sample program written in ferret, an implementation of a factorial function.

factorial-long { # long way, unnecessary
    n @1; # create a variable n, set to the first parameter
    result 1; # create a variable representing the final number
    
    while (>(n 1)
        {
            result *(result n);
            n -(n 1);
        }
    )

    result;
}

factorial-mid { # medium way, good
    result 1;

    for (1...@1 {
        *(@1 result);
    });

    result;
}

factorial { # concise, and gross
    1...@1 >>> {* (@1 @2)};
}

print(factorial-mid(10));

### Java code given for context;

static int factorial(int n) { 
    int res = 1, i; 

    for (int i = 2; i <= n; i++) {
        res *= i;
    }

    return res;
}

###